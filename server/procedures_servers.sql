set serveroutput on;

--procedure for display menus
create or replace procedure procDisplayMenu
		IS
begin

	DBMS_OUTPUT.PUT_LINE('PRESS 1 FOR PRODUCT SELL'||u'\000A'||'PRESS 2 FOR PRODUCT SEARCH BY CATAGORY');
	DBMS_OUTPUT.PUT_LINE('PRESS 3 FOR PRODUCT SEARCH BY TAGS'||u'\000A'||'PRESS 4 FOR PRODUCT SEARCH BY PRICE');
	DBMS_OUTPUT.PUT_LINE('PRESS 5 FOR EXIT');
		
end procDisplayMenu;
/

--procedure for customer creating
create or replace procedure isCreateCustomer(EMPLOYER_ID in EMPLOYER.EMPLOYER_ID%TYPE,CUSTOMER_EMAIL in CUSTOMER.CUSTOMER_EMAIL%TYPE,CUSTOMER_PHONENO in CUSTOMER.CUSTOMER_PHONENO%TYPE,CUSTOMER_ADDRESS in CUSTOMER.CUSTOMER_ADDRESS%TYPE,EMP_ID OUT EMPLOYER.EMPLOYER_ID%TYPE,CT_EMAIL OUT CUSTOMER.CUSTOMER_EMAIL%TYPE)
		IS
		
begin
	EMP_ID:= EMPLOYER_ID;
	CT_EMAIL :=CUSTOMER_EMAIL;
	INSERT INTO CUSTOMER(CUSTOMER_ID,CUSTOMER_EMAIL,CUSTOMER_PHONENO,CUSTOMER_ADDRESS) VALUES (CUSTOMER_ID.NEXTVAL,CUSTOMER_EMAIL,CUSTOMER_PHONENO,CUSTOMER_ADDRESS);
	
end isCreateCustomer;
/
--procedure for inserting buying details
create or replace procedure isCreateBuyingDetails(EMPLOYER_ID in EMPLOYER.EMPLOYER_ID%TYPE,CUSTOMER_ID in CUSTOMER.CUSTOMER_ID%TYPE,PRODUC_NAME in BUYING_DETAILS.PURCHASE_PRODUCT%TYPE,QTY in BUYING_DETAILS.PURCHASE_QUANTITY%TYPE,PURCHASE_PRICE in BUYING_DETAILS.PURCHASE_PRICE%TYPE,PR_I in EMPLOYER.EMPLOYER_ID%TYPE)
		IS
		PRO_QUAN int := 0;
begin
	
	INSERT INTO BUYING_DETAILS(PURCHASE_ID,PURCHASE_PRODUCT,PURCHASE_QUANTITY,PURCHASE_PRICE,CUSTOMER_ID,EMPLOYER_ID) VALUES (PURCHASE_ID.NEXTVAL,PRODUC_NAME,QTY,PURCHASE_PRICE,CUSTOMER_ID,EMPLOYER_ID);
	IF PR_I = 2000 THEN
		SELECT PRODUCT_QUANTITY into PRO_QUAN FROM PRODUCT_COMPUTER@site_link WHERE PRODUCT_NAME = PRODUC_NAME;
		UPDATE PRODUCT_COMPUTER@site_link  SET PRODUCT_QUANTITY = PRO_QUAN-QTY WHERE PRODUCT_NAME = PRODUC_NAME;
	ELSIF PR_I = 2001 THEN
		SELECT PRODUCT_QUANTITY INTO PRO_QUAN FROM PRODUCT_HEADPHONES@site_link WHERE PRODUCT_NAME = PRODUC_NAME;
		UPDATE PRODUCT_HEADPHONES@site_link  SET PRODUCT_QUANTITY = PRO_QUAN-QTY WHERE PRODUCT_NAME = PRODUC_NAME;
	ELSIF PR_I = 2002 THEN
		SELECT PRODUCT_QUANTITY INTO PRO_QUAN FROM PRODUCT_PRINTER@site_link WHERE PRODUCT_NAME = PRODUC_NAME;
		UPDATE PRODUCT_PRINTER@site_link  SET PRODUCT_QUANTITY = PRO_QUAN-QTY WHERE PRODUCT_NAME = PRODUC_NAME;
	ELSIF PR_I = 2003 THEN
		SELECT PRODUCT_QUANTITY INTO PRO_QUAN FROM PRODUCT_PENDRIVE@site_link WHERE PRODUCT_NAME = PRODUC_NAME;
		UPDATE PRODUCT_PENDRIVE@site_link  SET PRODUCT_QUANTITY = PRO_QUAN-QTY WHERE PRODUCT_NAME = PRODUC_NAME;
	
	END IF;
end isCreateBuyingDetails;
/

--procedure for searching by catagory
create or replace procedure isSearchByCataFromSite(CATA_NAME IN VARCHAR,CAT_ID OUT INT)
		IS
		COUNT_ROW NUMBER;
		CATA_ID INT;
begin
	
	SELECT COUNT(*) INTO COUNT_ROW FROM PRODUCT_CATAGORY@site_link WHERE CATAGORY_NAME = CATA_NAME;
	IF COUNT_ROW = 0 THEN
		CAT_ID := 0;
	ELSE 
		SELECT CATAGORY_ID  INTO CATA_ID FROM PRODUCT_CATAGORY@site_link WHERE CATAGORY_NAME = CATA_NAME;
		CAT_ID := CATA_ID;

	END IF;
end isSearchByCataFromSite;
/

--Displaying products by catagory for computer
create or replace procedure DisplayingProductsComputer
		IS
		PROD_ID INT ;
		PROD_NAME VARCHAR(100);
		PROD_QUAN INT;
		PROD_PRIC DECIMAL(10,2);
		
begin
	DBMS_OUTPUT.PUT_LINE('PRODUCT_ID_COMPUTER' || 'PRODUCT_NAME' || 'PRODUCT_QUANTITY' || 'PRODUCT_PRICE');
	DBMS_OUTPUT.PUT_LINE('--------------------------------------------------------------------------');
	for R in (SELECT * FROM PRODUCT_COMPUTER@site_link)LOOP
		PROD_ID:= R.PRODUCT_ID_COMPUTER; 
		PROD_NAME:= R.PRODUCT_NAME;
		PROD_QUAN:= R.PRODUCT_QUANTITY;
		PROD_PRIC:= R.PRODUCT_PRICE;
		DBMS_OUTPUT.PUT_LINE(PROD_ID || PROD_NAME ||PROD_QUAN||PROD_PRIC);
	
	END LOOP;	
	
end DisplayingProductsComputer;
/
--Displaying products by catagory for headphones
create or replace procedure DisplayingProductsHeadphones
		IS
		PROD_ID INT ;
		PROD_NAME VARCHAR(100);
		PROD_QUAN INT;
		PROD_PRIC DECIMAL(10,2);
		
begin
	DBMS_OUTPUT.PUT_LINE('PRODUCT_ID_COMPUTER ' || 'PRODUCT_NAME ' || 'PRODUCT_QUANTITY ' || 'PRODUCT_PRICE ');
	DBMS_OUTPUT.PUT_LINE('--------------------------------------------------------------------------');
	for P in (SELECT * FROM PRODUCT_HEADPHONES@site_link)LOOP
		PROD_ID:= P.PRODUCT_ID_HEADPHONES; 
		PROD_NAME:= P.PRODUCT_NAME;
		PROD_QUAN:= P.PRODUCT_QUANTITY;
		PROD_PRIC:= P.PRODUCT_PRICE;
		DBMS_OUTPUT.PUT_LINE(PROD_ID || PROD_NAME ||PROD_QUAN || PROD_PRIC);
	
	END LOOP;	
	
end DisplayingProductsHeadphones;
/

--Displaying products by catagory for Printer
create or replace procedure DisplayingProductsPrinter
		IS
		PROD_ID INT ;
		PROD_NAME VARCHAR(100);
		PROD_QUAN INT;
		PROD_PRIC DECIMAL(10,2);
		
begin
	DBMS_OUTPUT.PUT_LINE('PRODUCT_ID_COMPUTER ' || 'PRODUCT_NAME ' || 'PRODUCT_QUANTITY ' || 'PRODUCT_PRICE ');
	DBMS_OUTPUT.PUT_LINE('--------------------------------------------------------------------------');
	for P in (SELECT * FROM PRODUCT_PRINTER@site_link)LOOP
		PROD_ID:= P.PRODUCT_ID_PRINTER; 
		PROD_NAME:= P.PRODUCT_NAME;
		PROD_QUAN:= P.PRODUCT_QUANTITY;
		PROD_PRIC:= P.PRODUCT_PRICE;
		DBMS_OUTPUT.PUT_LINE(PROD_ID || PROD_NAME ||PROD_QUAN || PROD_PRIC);
	
	END LOOP;	
	
end DisplayingProductsPrinter;
/


--Displaying products by catagory for Printer
create or replace procedure DisplayingProductsPen
		IS
		PROD_ID INT ;
		PROD_NAME VARCHAR(100);
		PROD_QUAN INT;
		PROD_PRIC DECIMAL(10,2);
		
begin
	DBMS_OUTPUT.PUT_LINE('PRODUCT_ID_COMPUTER ' || 'PRODUCT_NAME ' || 'PRODUCT_QUANTITY ' || 'PRODUCT_PRICE ');
	DBMS_OUTPUT.PUT_LINE('--------------------------------------------------------------------------');
	for P in (SELECT * FROM PRODUCT_PENDRIVE@site_link)LOOP
		PROD_ID:= P.PRODUCT_ID_PENDRIVE; 
		PROD_NAME:= P.PRODUCT_NAME;
		PROD_QUAN:= P.PRODUCT_QUANTITY;
		PROD_PRIC:= P.PRODUCT_PRICE;
		DBMS_OUTPUT.PUT_LINE(PROD_ID || PROD_NAME ||PROD_QUAN || PROD_PRIC);
	
	END LOOP;	
	
end DisplayingProductsPen;
/
commit;

